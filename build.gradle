buildscript {
  repositories {
//  mavenCentral()
    maven {
      url 'https://maven.aliyun.com/repository/central'
    }
//  jcenter()
    maven {
      url 'https://maven.aliyun.com/repository/jcenter'
    }
    mavenLocal()
  }
}

plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.60'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group = 'com.github.io.remering'
version = '1.0.0-SNAPSHOT'

repositories {
//  mavenCentral()
  maven {
    url 'https://maven.aliyun.com/repository/central'
  }
//  jcenter()
  maven {
    url 'https://maven.aliyun.com/repository/jcenter'
  }
  mavenLocal()
}

ext {
  kotlinVersion = '1.3.20'
  vertxVersion = '3.8.5'
  ktormVersion = '2.7.2'
  junitJupiterEngineVersion = '5.4.0'
}

application {
  mainClassName = 'io.vertx.core.Launcher'
}


def mainVerticleName = 'com.github.io.remering.starter.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
  implementation "io.vertx:vertx-jdbc-client:$vertxVersion"
  implementation "io.vertx:vertx-auth-jwt:$vertxVersion"
  implementation "io.vertx:vertx-rx-java2:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "me.liuwj.ktorm:ktorm-core:$ktormVersion"
  implementation "me.liuwj.ktorm:ktorm-support-sqlite:$ktormVersion"
  implementation "org.xerial:sqlite-jdbc:3.30.1"
  implementation "io.vertx:vertx-mail-client:$vertxVersion"
  implementation "io.vertx:vertx-auth-jwt:$vertxVersion"
  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
  testImplementation "io.vertx:vertx-web-client:$vertxVersion"
}

compileKotlin {
  kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '1.8'
}


shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
